# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class JobSimulatorOpts(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, display_no: int=None, screent_no: int=None, vnc_password: str=None, no_vnc_port: int=None):  # noqa: E501
        """JobSimulatorOpts - a model defined in Swagger

        :param display_no: The display_no of this JobSimulatorOpts.  # noqa: E501
        :type display_no: int
        :param screent_no: The screent_no of this JobSimulatorOpts.  # noqa: E501
        :type screent_no: int
        :param vnc_password: The vnc_password of this JobSimulatorOpts.  # noqa: E501
        :type vnc_password: str
        :param no_vnc_port: The no_vnc_port of this JobSimulatorOpts.  # noqa: E501
        :type no_vnc_port: int
        """
        self.swagger_types = {
            'display_no': int,
            'screent_no': int,
            'vnc_password': str,
            'no_vnc_port': int
        }

        self.attribute_map = {
            'display_no': 'display_no',
            'screent_no': 'screent_no',
            'vnc_password': 'vnc_password',
            'no_vnc_port': 'no_vnc_port'
        }

        self._display_no = display_no
        self._screent_no = screent_no
        self._vnc_password = vnc_password
        self._no_vnc_port = no_vnc_port

    @classmethod
    def from_dict(cls, dikt) -> 'JobSimulatorOpts':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Job_simulator_opts of this JobSimulatorOpts.  # noqa: E501
        :rtype: JobSimulatorOpts
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_no(self) -> int:
        """Gets the display_no of this JobSimulatorOpts.


        :return: The display_no of this JobSimulatorOpts.
        :rtype: int
        """
        return self._display_no

    @display_no.setter
    def display_no(self, display_no: int):
        """Sets the display_no of this JobSimulatorOpts.


        :param display_no: The display_no of this JobSimulatorOpts.
        :type display_no: int
        """

        self._display_no = display_no

    @property
    def screent_no(self) -> int:
        """Gets the screent_no of this JobSimulatorOpts.


        :return: The screent_no of this JobSimulatorOpts.
        :rtype: int
        """
        return self._screent_no

    @screent_no.setter
    def screent_no(self, screent_no: int):
        """Sets the screent_no of this JobSimulatorOpts.


        :param screent_no: The screent_no of this JobSimulatorOpts.
        :type screent_no: int
        """

        self._screent_no = screent_no

    @property
    def vnc_password(self) -> str:
        """Gets the vnc_password of this JobSimulatorOpts.


        :return: The vnc_password of this JobSimulatorOpts.
        :rtype: str
        """
        return self._vnc_password

    @vnc_password.setter
    def vnc_password(self, vnc_password: str):
        """Sets the vnc_password of this JobSimulatorOpts.


        :param vnc_password: The vnc_password of this JobSimulatorOpts.
        :type vnc_password: str
        """

        self._vnc_password = vnc_password

    @property
    def no_vnc_port(self) -> int:
        """Gets the no_vnc_port of this JobSimulatorOpts.


        :return: The no_vnc_port of this JobSimulatorOpts.
        :rtype: int
        """
        return self._no_vnc_port

    @no_vnc_port.setter
    def no_vnc_port(self, no_vnc_port: int):
        """Sets the no_vnc_port of this JobSimulatorOpts.


        :param no_vnc_port: The no_vnc_port of this JobSimulatorOpts.
        :type no_vnc_port: int
        """

        self._no_vnc_port = no_vnc_port
