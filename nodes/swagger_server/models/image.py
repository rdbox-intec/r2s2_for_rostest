# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Image(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, registry: str = None, repository: str = None, tag: str = None, pull_policy: str = 'IfNotPresent', pull_secrets: List[str] = None):  # noqa: E501
        """Image - a model defined in Swagger

        :param registry: The registry of this Image.  # noqa: E501
        :type registry: str
        :param repository: The repository of this Image.  # noqa: E501
        :type repository: str
        :param tag: The tag of this Image.  # noqa: E501
        :type tag: str
        :param pull_policy: The pull_policy of this Image.  # noqa: E501
        :type pull_policy: str
        :param pull_secrets: The pull_secrets of this Image.  # noqa: E501
        :type pull_secrets: List[str]
        """
        self.swagger_types = {
            'registry': str,
            'repository': str,
            'tag': str,
            'pull_policy': str,
            'pull_secrets': List[str]
        }

        self.attribute_map = {
            'registry': 'registry',
            'repository': 'repository',
            'tag': 'tag',
            'pull_policy': 'pull_policy',
            'pull_secrets': 'pull_secrets'
        }

        self._registry = registry
        self._repository = repository
        self._tag = tag
        self._pull_policy = pull_policy
        self._pull_secrets = pull_secrets

    @classmethod
    def from_dict(cls, dikt) -> 'Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Image of this Image.  # noqa: E501
        :rtype: Image
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registry(self) -> str:
        """Gets the registry of this Image.


        :return: The registry of this Image.
        :rtype: str
        """
        return self._registry

    @registry.setter
    def registry(self, registry: str):
        """Sets the registry of this Image.


        :param registry: The registry of this Image.
        :type registry: str
        """

        self._registry = registry

    @property
    def repository(self) -> str:
        """Gets the repository of this Image.


        :return: The repository of this Image.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository: str):
        """Sets the repository of this Image.


        :param repository: The repository of this Image.
        :type repository: str
        """

        self._repository = repository

    @property
    def tag(self) -> str:
        """Gets the tag of this Image.


        :return: The tag of this Image.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag: str):
        """Sets the tag of this Image.


        :param tag: The tag of this Image.
        :type tag: str
        """

        self._tag = tag

    @property
    def pull_policy(self) -> str:
        """Gets the pull_policy of this Image.


        :return: The pull_policy of this Image.
        :rtype: str
        """
        return self._pull_policy

    @pull_policy.setter
    def pull_policy(self, pull_policy: str):
        """Sets the pull_policy of this Image.


        :param pull_policy: The pull_policy of this Image.
        :type pull_policy: str
        """

        self._pull_policy = pull_policy

    @property
    def pull_secrets(self) -> List[str]:
        """Gets the pull_secrets of this Image.


        :return: The pull_secrets of this Image.
        :rtype: List[str]
        """
        return self._pull_secrets

    @pull_secrets.setter
    def pull_secrets(self, pull_secrets: List[str]):
        """Sets the pull_secrets of this Image.


        :param pull_secrets: The pull_secrets of this Image.
        :type pull_secrets: List[str]
        """

        self._pull_secrets = pull_secrets
